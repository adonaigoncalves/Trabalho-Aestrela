package t2aestrela;

import java.awt.Color;
import java.awt.Container;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;

/**
 * Esta classe implementa a interação com o usuário e mostra o resultado.
 *
 * @author Adonai Gabriel
 */
public class Menu extends javax.swing.JFrame {

    /**
     * Creates new form Interface
     */
    public Menu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        TMapa = new javax.swing.JLabel();
        Obstaculos = new javax.swing.JLabel();
        PosInicial = new javax.swing.JLabel();
        PosFinal = new javax.swing.JLabel();
        jSpinnerMap = new javax.swing.JSpinner();
        jSpinnerObs = new javax.swing.JSpinner();
        jSpinnerInix = new javax.swing.JSpinner();
        jSpinnerIniy = new javax.swing.JSpinner();
        jSpinnerFinx = new javax.swing.JSpinner();
        jSpinnerFiny = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaSolucao = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("A* Pathfinding");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton1.setText("Executar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        TMapa.setText("Tamanho do Mapa");

        Obstaculos.setText("% de Obstáculos");

        PosInicial.setText("Posição Inicial");

        PosFinal.setText("Posição Final");

        jSpinnerMap.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));

        jSpinnerObs.setModel(new javax.swing.SpinnerNumberModel(25, 0, null, 1));

        jSpinnerInix.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jSpinnerIniy.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jSpinnerFinx.setModel(new javax.swing.SpinnerNumberModel(9, 0, null, 1));

        jSpinnerFiny.setModel(new javax.swing.SpinnerNumberModel(9, 0, null, 1));

        jLabel1.setText("(NxN)");

        jLabel2.setText("%");

        jLabel3.setText("x");

        jLabel4.setText("x");

        jLabel5.setText("y");

        jLabel6.setText("y");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText("Vermelho: Ponto final ou nodo objetivo;\nVerde: Ponto inicial e caminho encontrado, caso ele exista;\nAzul: Nodo visitado, mas que não faz parte do caminho;\nCiano: Nodo aberto, mas que não foi visitado.");
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setBorder(javax.swing.BorderFactory.createTitledBorder("Legenda"));
        jTextArea1.setMinimumSize(new java.awt.Dimension(279, 50));
        jScrollPane2.setViewportView(jTextArea1);

        AreaSolucao.setColumns(20);
        AreaSolucao.setRows(5);
        jScrollPane1.setViewportView(AreaSolucao);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TMapa)
                            .addComponent(Obstaculos)
                            .addComponent(PosInicial)
                            .addComponent(PosFinal))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinnerFinx, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel4))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinnerInix, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)))
                                .addGap(4, 4, 4)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinnerIniy, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jSpinnerFiny, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel6))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSpinnerObs, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSpinnerMap, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jButton1)))
                .addGap(0, 107, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jSpinnerMap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TMapa))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(Obstaculos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerInix, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerIniy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(PosInicial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSpinnerFinx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PosFinal)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerFiny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(9, 9, 9)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    /**
     * Método que executa o algoritmo A* conforme os valores recebidos da interface.
     * @param evt - parâmetro padrão não utilizado
     */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Nodo posInicial = new Nodo((int) jSpinnerInix.getValue(), (int) jSpinnerIniy.getValue());
        Nodo posFinal = new Nodo((int) jSpinnerFinx.getValue(), (int) jSpinnerFiny.getValue());
        if ((int) jSpinnerInix.getValue() > (int) jSpinnerMap.getValue() - 1 || (int) jSpinnerIniy.getValue() > (int) jSpinnerMap.getValue() - 1) {
            AreaSolucao.setText("Ponto inicial fora da matriz, por favor use um valor possível.\n");
            return;
        }
        if ((int) jSpinnerFinx.getValue() > (int) jSpinnerMap.getValue() - 1 || (int) jSpinnerFiny.getValue() > (int) jSpinnerMap.getValue() - 1) {
            AreaSolucao.setText("Ponto final fora da matriz, por favor use um valor possível.\n");
            return;
        }
        Aestrela busca = new Aestrela(posInicial, posFinal, (int) jSpinnerMap.getValue(), (int) jSpinnerObs.getValue());
        Nodo solucao = busca.executa();
        mostraMatriz(busca, (int) jSpinnerMap.getValue());
        if (solucao == null) {
            AreaSolucao.setText("Não foi possível encontrar um caminho.\n");
        } else {
            AreaSolucao.setText(null);
            AreaSolucao.append("Solucao: (x, y, heurística, função f(g + h)):\n");
            List<Nodo> caminho = new ArrayList<Nodo>();
            Nodo atual = solucao;
            while (atual != null) {
                caminho.add(atual);
                atual = atual.getPai();
            }
            int custo = caminho.size() - 1;
            int cont = 0;
            for (int i = custo; i >= 0; i--) {
                atual = caminho.get(i);
                if (atual.getX() == solucao.getX() && atual.getY() == solucao.getY()) {
                    AreaSolucao.append(atual.toString());
                } else {
                    AreaSolucao.append(atual.toString() + " -> ");
                    cont++;
                }
                if (cont % 3 == 0) {
                    AreaSolucao.append("\n");
                }
            }
            AreaSolucao.append("\nCusto = " + custo + "\n");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    /**
     * Método que mostra a matriz resultante da busca do algoritmo A*.
     * @param busca - Objeto da classe Aestrela.
     * @param tamMapa - Número de linhas e colunas recebidos da interface.
     */
    private void mostraMatriz(Aestrela busca, int tamMapa) {
        JFrame frame = new JFrame();
        frame.setTitle("A* Pathfinder");
        frame.setSize(715, 730);
        frame.setResizable(false);
        frame.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                frame.dispose();
                Menu.this.setVisible(true);
            }
        });
        frame.setVisible(true);
        frame.setBackground(Color.WHITE);
        Matriz matriz = new Matriz(tamMapa, busca);
        Container contentPane = frame.getContentPane();
        contentPane.add(matriz);
        matriz.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaSolucao;
    private javax.swing.JLabel Obstaculos;
    private javax.swing.JLabel PosFinal;
    private javax.swing.JLabel PosInicial;
    private javax.swing.JLabel TMapa;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinnerFinx;
    private javax.swing.JSpinner jSpinnerFiny;
    private javax.swing.JSpinner jSpinnerInix;
    private javax.swing.JSpinner jSpinnerIniy;
    private javax.swing.JSpinner jSpinnerMap;
    private javax.swing.JSpinner jSpinnerObs;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
